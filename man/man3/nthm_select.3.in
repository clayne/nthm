.\"                              hey, Emacs:   -*- nroff -*-
.TH NTHM_SELECT 3 @DATE_VERSION_NTHM_MANUAL@
.\" Please update the above date whenever this man page is modified.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins (default)
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
nthm_select \- return a pipe from the next thread to finish
.SH SYNOPSIS
#include <nthm/nthm.h>
.sp 1
.BR nthm_pipe
.BR nthm_select
( int
.I *err
)
.SH DESCRIPTION
The
.BR nthm_select
function
obtains a pipe
whose return value is ready to be read.
The pipe is selected
from among those
previously opened with
.BR nthm_open
in the context the caller's thread, or previously tethered to it with
.BR nthm_tether.
If multiple scopes exist in the caller's thread due to
previous calls to
.BR nthm_enter_scope,
the pipe is selected only from among those opened or tethered in the
most recently entered scope.
.P
Interleaved calls to
.BR nthm_open,
.BR nthm_select
and
.BR nthm_read
are an efficient way to run a pool of worker threads
without unnecessary blocking because
.BR nthm_select
never blocks unless there is no alternative due to
all threads in the current scope being busy.
.P
Applications can check whether a call to
.BR nthm_select
would block by polling
.BR nthm_blocked.
.SH RETURN VALUE
Each successful call to
.BR nthm_select
returns a fresh pipe previously opened within the caller's context and
scope by
.BR nthm_open
or tethered to it by
.BR nthm_tether
until there are none left, at which time
.BR nthm_select
returns NULL. If more pipes are opened or tethered later, then they
will be available via subsequent calls to
.BR nthm_select.
.P
An unsuccessful call to
.BR nthm_select
also returns a NULL result. Whether a NULL result indicates a
successful call when there are no more pipes or an unsuccessful call
can be determined by the error code as explained below.
.P
Any pipe returned by
.BR nthm_select
is guaranteed to be readable by
.BR nthm_read
without blocking the caller.
.TP
*
If no pipe is available for
reading without blocking but there is at least one pipe whose thread is still running, then
.BR nthm_select
blocks the caller until the next thread finishes and only then returns its pipe.
.TP
*
If multiple pipes are ready for reading without blocking, then
.BR nthm_select
returns the one that has been ready the longest and saves the
rest for subsequent calls.
.SH ERRORS
Error codes are reported in
.I *err
with any non-zero value indicating an error.
If
.I *err
is non-zero on entry, then
.BR nthm_select
leaves it unchanged.
If it is zero on entry and non-zero on exit, then
.BR nthm_select
may set
.I *err
to following code for the reason noted.
.TP
.BR NTHM_KILLED
Selecting was interrupted because the caller's thread was killed with
.BR nthm_kill
or
.BR nthm_kill_all.
.P
Undocumented error codes also may be assigned to
.I *err
if internal consistency checks fail, which are helpful in bug reports.
.SH SEE ALSO
.BR nthm (7),
.BR nthm_open (3),
.BR nthm_send (3),
.BR nthm_read (3)
.br
.BR nthm_truncate (3),
.BR nthm_truncate_all (3),
.BR nthm_truncated (3)
.br
.BR nthm_enter_scope (3),
.BR nthm_exit_scope (3)
.br
.BR nthm_kill (3),
.BR nthm_kill_all (3),
.BR nthm_killed (3)
.br
.BR nthm_untether (3),
.BR nthm_tether (3),
.BR nthm_blocked (3)
.br
.BR nthm_strerror (3),
.BR nthm_busy (3),
.BR pthreads (7),
.BR nthm_sync (3)
.SH AUTHOR
Dennis Furey 
.MT @EMAIL@
.ME
.SH PROJECT PAGE
.UR @URL@
.UE
